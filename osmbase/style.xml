<?xml version="1.0" encoding="utf-8"?>
<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" background-color="rgb(181,208,208)">
  <FontSet name="bold-fonts">
    <Font face-name="DejaVu Sans Bold"/>
    <Font face-name="Unifont Medium"/>
  </FontSet>
  <FontSet name="book-fonts">
    <Font face-name="DejaVu Sans Book"/>
    <Font face-name="Unifont Medium"/>
  </FontSet>
  <FontSet name="oblique-fonts">
    <Font face-name="DejaVu Sans Oblique"/>
    <Font face-name="Unifont Medium"/>
  </FontSet>
  <Style name="access">
    <Rule>
      <Filter>(([access]=&apos;permissive&apos;) and ((([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;footway&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,255,153)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;permissive&apos;) and (([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;))))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,255,153)" stroke-width="3" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;permissive&apos;) and (((([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;footway&apos;)) or ([highway]=&apos;service&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,255,153)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;destination&apos;) and (([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(194,224,255)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;destination&apos;) and (([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;))))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(194,224,255)" stroke-width="3" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;destination&apos;) and ((([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;service&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(194,224,255)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>((([access]=&apos;private&apos;) or ([access]=&apos;no&apos;)) and not (([highway]=&apos;service&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(239,169,169)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>((([access]=&apos;private&apos;) or ([access]=&apos;no&apos;)) and (([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;))))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(239,169,169)" stroke-width="3" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
    <Rule>
      <Filter>(([access]=&apos;private&apos;) or ([access]=&apos;no&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(239,169,169)" stroke-width="6" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 8"/>
    </Rule>
  </Style>
  <Style name="admin-01234">
    <Rule>
      <Filter>(([admin_level]=&apos;2&apos;) or ([admin_level]=&apos;3&apos;))</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>50000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="0.59999999999999998" stroke-opacity="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>(([admin_level]=&apos;2&apos;) or ([admin_level]=&apos;3&apos;))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="2" stroke-opacity="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;2&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="6" stroke-opacity="0.10000000000000001"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;3&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="5" stroke-opacity="0.10000000000000001" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;4&apos;)</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>50000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="0.59999999999999998" stroke-opacity="0.20000000000000001" stroke-dasharray="4, 3"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;4&apos;)</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="1" stroke-opacity="0.20000000000000001" stroke-dasharray="4, 3"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;4&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="3" stroke-opacity="0.20000000000000001" stroke-dasharray="4, 3"/>
    </Rule>
  </Style>
  <Style name="admin-5678">
    <Rule>
      <Filter>([admin_level]=&apos;5&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="2" stroke-opacity="0.29999999999999999" stroke-dasharray="6, 3,2, 3,2, 3"/>
    </Rule>
    <Rule>
      <Filter>([admin_level]=&apos;6&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="2" stroke-opacity="0.29999999999999999" stroke-dasharray="6, 3,2, 3"/>
    </Rule>
    <Rule>
      <Filter>(([admin_level]=&apos;8&apos;) or ([admin_level]=&apos;7&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="1.5" stroke-opacity="0.29999999999999999" stroke-dasharray="5, 2"/>
    </Rule>
  </Style>
  <Style name="admin-other">
    <Rule>
      <Filter>(([admin_level]=&apos;10&apos;) or ([admin_level]=&apos;9&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="2" stroke-opacity="0.29999999999999999" stroke-dasharray="2, 3"/>
    </Rule>
    <Rule>
      <Filter>not (([admin_level]!=&apos;&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,0,128)" stroke-width="1" stroke-opacity="0.20000000000000001"/>
    </Rule>
  </Style>
  <Style name="aerialways">
    <Rule>
      <Filter>((([aerialway]=&apos;cable_car&apos;) or ([aerialway]=&apos;gondola&apos;)) or ([aerialway]=&apos;goods&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LinePatternSymbolizer file="symbols/cable_car.png"/>
    </Rule>
    <Rule>
      <Filter>(((((([aerialway]=&apos;chair_lift&apos;) or ([aerialway]=&apos;drag_lift&apos;)) or ([aerialway]=&apos;t-bar&apos;)) or ([aerialway]=&apos;j-bar&apos;)) or ([aerialway]=&apos;platter&apos;)) or ([aerialway]=&apos;rope_tow&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LinePatternSymbolizer file="symbols/chair_lift.png"/>
    </Rule>
  </Style>
  <Style name="area-text">
    <Rule>
      <Filter>([way_area]&gt;=150000)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([way_area]&gt;=80000) and ([way_area]&lt;150000))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([way_area]&gt;=20000) and ([way_area]&lt;80000))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([way_area]&lt;20000)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="barriers">
    <Rule>
      <Filter>([barrier]=&apos;embankment&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.40000000000000002"/>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;hedge&apos;) or ([barrier]=&apos;hedge&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(174,209,160)" stroke-width="3"/>
    </Rule>
    <Rule>
      <Filter>(([barrier]!=&apos;&apos;) and not ((([barrier]=&apos;hedge&apos;) or ([barrier]=&apos;embankment&apos;))))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.40000000000000002"/>
    </Rule>
  </Style>
  <Style name="barriers_area">
    <Rule>
      <Filter>(([natural]=&apos;hedge&apos;) or ([barrier]=&apos;hedge&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(174,209,160)"/>
    </Rule>
    <Rule>
      <Filter>(([barrier]!=&apos;&apos;) and not (([barrier]=&apos;hedge&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.40000000000000002"/>
    </Rule>
  </Style>
  <Style name="boundary">
    <Rule>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(0,128,0)" fill-opacity="0.050000000000000003"/>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="1.5" stroke-opacity="0.14999999999999999" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(0,128,0)" fill-opacity="0.050000000000000003"/>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="3" stroke-opacity="0.14999999999999999" stroke-dasharray="6, 2"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="3" stroke-opacity="0.14999999999999999" stroke-dasharray="6, 2"/>
    </Rule>
    <Rule>
      <Filter>([way_area]&gt;=200000000)</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="14" fontset-name="bold-fonts" size="8" halo-radius="1" fill="rgb(153,204,153)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="14" fontset-name="bold-fonts" size="11" halo-radius="1" fill="rgb(153,204,153)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="bridges_casing">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="6.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="9"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="12"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="8"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="11"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="16"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="8"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="11"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="16"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="10"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="12"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="16"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="7.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="11"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="16"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="9"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="11"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="16"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;service&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="3"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;service&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="8"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="2.2000000000000002"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="3.7999999999999998"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="7"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="9.5"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="19"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="7"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;subway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5.5"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;light_rail&apos;) or ([railway]=&apos;narrow_gauge&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="5.5"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="6.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;bridleway&apos;) or (([highway]=&apos;path&apos;) and ([horse]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;footway&apos;) or (([highway]=&apos;path&apos;) and ([foot]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="6"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;path&apos;) and not (((([bicycle]=&apos;designated&apos;) or ([foot]=&apos;designated&apos;)) or ([horse]=&apos;designated&apos;))))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;cycleway&apos;) or (([highway]=&apos;path&apos;) and ([bicycle]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5.5"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;byway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5.5"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;rail&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="6.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;INT-spur-siding-yard&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5.7000000000000002" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;disused&apos;) or ([railway]=&apos;abandoned&apos;)) or ([railway]=&apos;construction&apos;)) and not (([highway]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="6"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade1&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade2&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade3&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade4&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade5&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and not (([tracktype]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="4.5"/>
    </Rule>
  </Style>
  <Style name="bridges_casing2">
    <Rule>
      <Filter>([railway]=&apos;subway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;light_rail&apos;) or ([railway]=&apos;narrow_gauge&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;bridleway&apos;) or (([highway]=&apos;path&apos;) and ([horse]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;footway&apos;) or (([highway]=&apos;path&apos;) and ([foot]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;path&apos;) and not (((([bicycle]=&apos;designated&apos;) or ([foot]=&apos;designated&apos;)) or ([horse]=&apos;designated&apos;))))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;cycleway&apos;) or (([highway]=&apos;path&apos;) and ([bicycle]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;byway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;rail&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;INT-spur-siding-yard&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;disused&apos;) or ([railway]=&apos;abandoned&apos;)) or ([railway]=&apos;construction&apos;)) and not (([highway]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade1&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade2&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade3&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade4&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade5&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and not (([tracktype]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="bridges_fill">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="5.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="7.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="10" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="9.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="14.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="9.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="14.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="10.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="14.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="9.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="14" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="3.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="9.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="14" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="14" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;service&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;service&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="5.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="18"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="6"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;subway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;light_rail&apos;) or ([railway]=&apos;narrow_gauge&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(222,189,156)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="2, 4"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(222,189,156)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 6"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;bridleway&apos;) or (([highway]=&apos;path&apos;) and ([horse]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="1.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;footway&apos;) or (([highway]=&apos;path&apos;) and ([foot]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(250,128,114)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;path&apos;) and not (((([bicycle]=&apos;designated&apos;) or ([foot]=&apos;designated&apos;)) or ([horse]=&apos;designated&apos;))))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;cycleway&apos;) or (([highway]=&apos;path&apos;) and ([bicycle]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;byway&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,204,0)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;rail&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="8, 12"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;rail&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="0, 11,8, 1"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;INT-spur-siding-yard&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="0.80000000000000004" stroke-linejoin="round" stroke-dasharray="0, 8,11, 1"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;disused&apos;) or ([railway]=&apos;abandoned&apos;)) or ([railway]=&apos;construction&apos;)) and not (([highway]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="2, 4"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade1&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(179,119,0)" stroke-width="2" stroke-opacity="0.69999999999999996"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade2&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(168,112,0)" stroke-width="1.5" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade3&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.69999999999999996" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade4&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 7,1, 5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and ([tracktype]=&apos;grade5&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;track&apos;) and not (([tracktype]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
  </Style>
  <Style name="buildings">
    <Rule>
      <Filter>([building]=&apos;INT-light&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(188,169,169)" fill-opacity="0.69999999999999996"/>
    </Rule>
    <Rule>
      <Filter>(([building]!=&apos;INT-light&apos;) and ([building]!=&apos;&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(188,169,169)" fill-opacity="0.90000000000000002"/>
    </Rule>
    <Rule>
      <Filter>(([building]!=&apos;INT-light&apos;) and ([building]!=&apos;&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(51,0,102)" stroke-width="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;terminal&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(204,153,255)"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;terminal&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(51,0,102)" stroke-width="0.20000000000000001"/>
    </Rule>
  </Style>
  <Style name="buildings-lz">
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) or ([building]=&apos;station&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(212,170,170)"/>
    </Rule>
    <Rule>
      <Filter>([building]=&apos;supermarket&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(255,192,203)" fill-opacity="0.5"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;place_of_worship&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(119,119,119)" fill-opacity="0.5"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;place_of_worship&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(170,170,170)" fill-opacity="0.90000000000000002"/>
      <LineSymbolizer stroke="rgb(17,17,17)" stroke-width="0.29999999999999999"/>
    </Rule>
  </Style>
  <Style name="builtup">
    <Rule>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(221,221,221)"/>
    </Rule>
  </Style>
  <Style name="capital">
    <Rule>
      <MinScaleDenominator>12500000</MinScaleDenominator>
      <MaxScaleDenominator>25000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>12500000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="14" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="castle_walls">
    <Rule>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(136,136,136)" stroke-width="2"/>
    </Rule>
  </Style>
  <Style name="city">
    <Rule>
      <Filter>(([place]=&apos;city&apos;) or ([place]=&apos;metropolis&apos;))</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>12500000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="8" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([place]=&apos;city&apos;) or ([place]=&apos;metropolis&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([place]=&apos;city&apos;) or ([place]=&apos;metropolis&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="book-fonts" size="14" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="citywalls">
    <Rule>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4" stroke-opacity="0.80000000000000004" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="6" stroke-opacity="0.80000000000000004" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="9" stroke-opacity="0.80000000000000004" stroke-linejoin="round"/>
    </Rule>
  </Style>
  <Style name="cliffs">
    <Rule>
      <Filter>([natural]=&apos;cliff&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LinePatternSymbolizer file="symbols/cliff.png"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;cliff&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LinePatternSymbolizer file="symbols/cliff2.png"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;embankment&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LinePatternSymbolizer file="symbols/cliff.png"/>
    </Rule>
  </Style>
  <Style name="coast-poly">
    <Rule>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(242,239,233)"/>
    </Rule>
  </Style>
  <Style name="continent">
    <Rule>
      <Filter>([place]=&apos;continent&apos;)</Filter>
      <MinScaleDenominator>100000000</MinScaleDenominator>
      <MaxScaleDenominator>500000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(157,108,157)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="country">
    <Rule>
      <Filter>([place]=&apos;country&apos;)</Filter>
      <MinScaleDenominator>50000000</MinScaleDenominator>
      <MaxScaleDenominator>200000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="20" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(157,108,157)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([place]=&apos;country&apos;)</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>50000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(157,108,157)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="dam">
    <Rule>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(34,34,34)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="directions">
    <Rule>
      <Filter>([oneway]=&apos;yes&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="1" stroke-linejoin="bevel" stroke-dasharray="0, 12,10, 152"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="2" stroke-linejoin="bevel" stroke-dasharray="0, 12,9, 153"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="3" stroke-linejoin="bevel" stroke-dasharray="0, 18,2, 154"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="4" stroke-linejoin="bevel" stroke-dasharray="0, 18,1, 155"/>
    </Rule>
    <Rule>
      <Filter>([oneway]=&apos;-1&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="1" stroke-linejoin="bevel" stroke-dasharray="0, 12,10, 152"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="2" stroke-linejoin="bevel" stroke-dasharray="0, 13,9, 152"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="3" stroke-linejoin="bevel" stroke-dasharray="0, 14,2, 158"/>
      <LineSymbolizer stroke="rgb(108,112,213)" stroke-width="4" stroke-linejoin="bevel" stroke-dasharray="0, 15,1, 158"/>
    </Rule>
  </Style>
  <Style name="ferry-routes">
    <Rule>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="0.40000000000000002" stroke-dasharray="4, 4"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="0.80000000000000004" stroke-dasharray="6, 6"/>
    </Rule>
  </Style>
  <Style name="footbikecycle-tunnels">
    <Rule>
      <Filter>(([highway]=&apos;bridleway&apos;) or (([highway]=&apos;path&apos;) and ([horse]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="2" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;footway&apos;) or (([highway]=&apos;path&apos;) and ([foot]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(250,128,114)" stroke-width="2.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;path&apos;) and not (((([bicycle]=&apos;designated&apos;) or ([foot]=&apos;designated&apos;)) or ([horse]=&apos;designated&apos;))))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;cycleway&apos;) or (([highway]=&apos;path&apos;) and ([bicycle]=&apos;designated&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="2" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
  </Style>
  <Style name="glaciers-text">
    <Rule>
      <Filter>([way_area]&gt;=10000000)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(153,153,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([way_area]&gt;=5000000) and ([way_area]&lt;10000000))</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(153,153,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([way_area]&lt;5000000)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(153,153,255)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="guideways">
    <Rule>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="8, 12"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="0, 11,8, 1"/>
    </Rule>
  </Style>
  <Style name="hamlet">
    <Rule>
      <Filter>(((([place]=&apos;hamlet&apos;) or ([place]=&apos;locality&apos;)) or ([place]=&apos;isolated_dwelling&apos;)) or ([place]=&apos;farm&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" size="8" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(((([place]=&apos;hamlet&apos;) or ([place]=&apos;locality&apos;)) or ([place]=&apos;isolated_dwelling&apos;)) or ([place]=&apos;farm&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" size="11" halo-radius="1" fill="rgb(119,119,119)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="highway-area-casing">
    <Rule>
      <Filter>(([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;pedestrian&apos;) or ([highway]=&apos;service&apos;)) or ([highway]=&apos;footway&apos;)) or ([highway]=&apos;path&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;track&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;platform&apos;) or ([railway]=&apos;platform&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="highway-area-fill">
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(204,204,204)"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;service&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(255,255,255)"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;pedestrian&apos;) or ([highway]=&apos;footway&apos;)) or ([highway]=&apos;path&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(237,237,237)"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;track&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(223,204,102)"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;platform&apos;) or ([railway]=&apos;platform&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PolygonSymbolizer gamma="0.65000000000000002" fill="rgb(187,187,187)"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,204)"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,204)"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;helipad&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,204)"/>
    </Rule>
  </Style>
  <Style name="highway-junctions">
    <Rule>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer minimum-distance="2" wrap-width="12" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(102,102,255)">[ref]</TextSymbolizer>
    </Rule>
    <Rule>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer minimum-distance="2" wrap-width="12" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(102,102,255)">[ref]</TextSymbolizer>
      <TextSymbolizer minimum-distance="2" dy="-8" wrap-width="2" wrap-character=";" fontset-name="oblique-fonts" size="8" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer minimum-distance="2" wrap-width="12" fontset-name="oblique-fonts" size="12" halo-radius="1" fill="rgb(102,102,255)">[ref]</TextSymbolizer>
      <TextSymbolizer minimum-distance="2" dy="-10" wrap-width="2" wrap-character=";" fontset-name="oblique-fonts" size="11" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="housenames">
    <Rule>
      <MinScaleDenominator>2500</MinScaleDenominator>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="0" wrap-width="20" fontset-name="book-fonts" size="8" fill="rgb(68,68,68)">[addr:housename]</TextSymbolizer>
    </Rule>
    <Rule>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="0" wrap-width="20" fontset-name="book-fonts" size="9" fill="rgb(68,68,68)">[addr:housename]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="housenumbers">
    <Rule>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" minimum-distance="1" dy="0" wrap-width="0" fontset-name="book-fonts" size="9" fill="rgb(68,68,68)">[addr:housenumber]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="interpolation">
    <Rule>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(136,136,136)" stroke-width="1" stroke-dasharray="2, 4"/>
    </Rule>
  </Style>
  <Style name="landcover">
    <Rule>
      <Filter>([leisure]=&apos;swimming_pool&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(181,208,208)"/>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;playground&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(204,255,241)"/>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>((([tourism]=&apos;camp_site&apos;) or ([tourism]=&apos;caravan_site&apos;)) or ([tourism]=&apos;picnic_site&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(204,255,153)" fill-opacity="0.5"/>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;attraction&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(242,202,234)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;quarry&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/quarry2.png"/>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;vineyard&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(171,223,150)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;orchard&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/orchard.png"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;vineyard&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/vineyard.png"/>
    </Rule>
    <Rule>
      <Filter>((([landuse]=&apos;cemetery&apos;) or ([landuse]=&apos;grave_yard&apos;)) or ([amenity]=&apos;grave_yard&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(170,203,175)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;residential&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(221,221,221)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;garages&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(153,153,102)" fill-opacity="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>([military]=&apos;barracks&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(255,143,143)"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;field&apos;) or ([natural]=&apos;field&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(102,102,0)" fill-opacity="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;field&apos;) or ([natural]=&apos;field&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(102,102,0)" fill-opacity="0.20000000000000001"/>
      <LineSymbolizer stroke="rgb(102,102,0)" stroke-width="0.29999999999999999" stroke-opacity="0.40000000000000002"/>
    </Rule>
    <Rule>
      <Filter>([military]=&apos;danger_area&apos;)</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(255,192,203)" fill-opacity="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>([military]=&apos;danger_area&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/danger.png"/>
    </Rule>
    <Rule>
      <Filter>(((([landuse]=&apos;cemetery&apos;) or ([landuse]=&apos;grave_yard&apos;)) or ([amenity]=&apos;grave_yard&apos;)) and ([religion]=&apos;jewish&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/cemetery_jewish.18.png"/>
    </Rule>
    <Rule>
      <Filter>(((([landuse]=&apos;cemetery&apos;) or ([landuse]=&apos;grave_yard&apos;)) or ([amenity]=&apos;grave_yard&apos;)) and ([religion]=&apos;christian&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/grave_yard.png"/>
    </Rule>
    <Rule>
      <Filter>(((([landuse]=&apos;cemetery&apos;) or ([landuse]=&apos;grave_yard&apos;)) or ([amenity]=&apos;grave_yard&apos;)) and ([religion]=&apos;INT-generic&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/grave_yard_generic.png"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;meadow&apos;) or ([landuse]=&apos;grass&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(207,236,168)"/>
    </Rule>
    <Rule>
      <Filter>(([leisure]=&apos;park&apos;) or ([leisure]=&apos;recreation_ground&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(182,253,182)" fill-opacity="0.59999999999999998"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;zoo&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/zoo.png"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;common&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(207,236,168)"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;garden&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(207,236,168)"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;golf_course&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(181,227,181)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;allotments&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(229,199,171)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;allotments&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/allotments.png"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;forest&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(141,197,108)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;forest&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/forest.png"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;farmyard&apos;)</Filter>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(221,191,146)"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;farm&apos;) or ([landuse]=&apos;farmland&apos;))</Filter>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(234,216,189)"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;recreation_ground&apos;) or ([landuse]=&apos;conservation&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(207,236,168)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;village_green&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(207,236,168)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;retail&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(241,218,218)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;retail&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,0,0)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>(([landuse]=&apos;industrial&apos;) or ([landuse]=&apos;railway&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(223,209,214)"/>
    </Rule>
    <Rule>
      <Filter>(([power]=&apos;station&apos;) or ([power]=&apos;generator&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,187)"/>
    </Rule>
    <Rule>
      <Filter>(([power]=&apos;station&apos;) or ([power]=&apos;generator&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,187)"/>
      <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="0.40000000000000002"/>
    </Rule>
    <Rule>
      <Filter>([power]=&apos;sub_station&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(187,187,187)"/>
      <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="0.40000000000000002"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;commercial&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(239,200,200)"/>
    </Rule>
    <Rule>
      <Filter>(((([landuse]=&apos;brownfield&apos;) or ([landuse]=&apos;landfill&apos;)) or ([landuse]=&apos;greenfield&apos;)) or ([landuse]=&apos;construction&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(157,157,108)" fill-opacity="0.69999999999999996"/>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;wood&apos;) or ([landuse]=&apos;wood&apos;))</Filter>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(174,209,160)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;desert&apos;)</Filter>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(227,181,122)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;sand&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(255,223,136)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;heath&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(214,217,159)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;grassland&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(198,228,180)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;scrub&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(181,227,181)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;scrub&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/scrub.png"/>
    </Rule>
    <Rule>
      <Filter>((((([amenity]=&apos;university&apos;) or ([amenity]=&apos;college&apos;)) or ([amenity]=&apos;school&apos;)) or ([amenity]=&apos;hospital&apos;)) or ([amenity]=&apos;kindergarten&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(240,240,216)"/>
    </Rule>
    <Rule>
      <Filter>((((([amenity]=&apos;university&apos;) or ([amenity]=&apos;college&apos;)) or ([amenity]=&apos;school&apos;)) or ([amenity]=&apos;hospital&apos;)) or ([amenity]=&apos;kindergarten&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(165,42,42)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;parking&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(247,239,183)"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;parking&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(238,238,209)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;prison&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/amenity_prison.png"/>
      <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="0.29999999999999999"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;apron&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(233,209,255)"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;aerodrome&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(204,204,204)" fill-opacity="0.20000000000000001"/>
      <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="0.20000000000000001"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;beach&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/beach.png"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;services&apos;) or ([highway]=&apos;rest_area&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(239,200,200)"/>
    </Rule>
  </Style>
  <Style name="landcover_line">
    <Rule>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="3" stroke-linejoin="round" stroke-linecap="square"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="6" stroke-linejoin="round" stroke-linecap="square"/>
    </Rule>
  </Style>
  <Style name="landuse_overlay">
    <Rule>
      <Filter>([landuse]=&apos;military&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/military_red_hz2.png"/>
      <LineSymbolizer stroke="rgb(255,85,85)" stroke-width="3" stroke-opacity="0.32900000000000001"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;nature_reserve&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/nature_reserve5.png"/>
      <LineSymbolizer stroke="rgb(102,204,51)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;nature_reserve&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/nature_reserve6.png"/>
      <LineSymbolizer stroke="rgb(102,204,51)" stroke-width="1"/>
    </Rule>
  </Style>
  <Style name="locks">
    <Rule>
      <Filter>([waterway]=&apos;lock_gate&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/lock_gate.png"/>
    </Rule>
  </Style>
  <Style name="marinas-area">
    <Rule>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="1" stroke-opacity="0.5" stroke-dasharray="6, 2"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="2" stroke-opacity="0.5" stroke-dasharray="6, 2"/>
    </Rule>
  </Style>
  <Style name="minor-roads-casing">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="3" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="3" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="3" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="6.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="7.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="7.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="8.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="10" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="11.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="11.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="11.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="13" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="16" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="16" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="16" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="7.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="4.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((((([highway]=&apos;tertiary&apos;) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="16" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and not ((([service]=&apos;INT-minor&apos;) or ([tunnel]=&apos;yes&apos;))))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and not ((([service]=&apos;INT-minor&apos;) or ([tunnel]=&apos;yes&apos;))))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="7" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and ([service]=&apos;INT-minor&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="3.6000000000000001" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="3.6000000000000001" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="6.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;pedestrian&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="9" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="14.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="minor-roads-casing-links">
    <Rule>
      <Filter>([highway]=&apos;raceway&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,192,203)" stroke-width="1.2" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;raceway&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,192,203)" stroke-width="4" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;raceway&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,192,203)" stroke-width="7" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="1.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="4.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="8" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="11" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="3" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="7.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="11.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="16" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="3" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="7.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="11.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="16" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="8.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="11.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="16" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="7.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="16" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="minor-roads-fill">
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and not (([construction]!=&apos;&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,204,204)" stroke-width="2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;motorway&apos;) or ([construction]=&apos;motorway_link&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;trunk&apos;) or ([construction]=&apos;trunk_link&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;primary&apos;) or ([construction]=&apos;primary_link&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;secondary&apos;) or ([construction]=&apos;secondary_link&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and not (([construction]!=&apos;&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,204,204)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;motorway&apos;) or ([construction]=&apos;motorway_link&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;trunk&apos;) or ([construction]=&apos;trunk_link&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;primary&apos;) or ([construction]=&apos;primary_link&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;secondary&apos;) or ([construction]=&apos;secondary_link&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;tertiary&apos;) or ([construction]=&apos;tertiary_link&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and ((([construction]=&apos;residential&apos;) or ([construction]=&apos;unclassified&apos;)) or ([construction]=&apos;living_street&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="4" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linejoin="round" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and ([construction]=&apos;service&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2.5" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="6, 4"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and not (([construction]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,204,204)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;motorway&apos;) or ([construction]=&apos;motorway_link&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;trunk&apos;) or ([construction]=&apos;trunk_link&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;primary&apos;) or ([construction]=&apos;primary_link&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;secondary&apos;) or ([construction]=&apos;secondary_link&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and (([construction]=&apos;tertiary&apos;) or ([construction]=&apos;tertiary_link&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="8"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and ((([construction]=&apos;residential&apos;) or ([construction]=&apos;unclassified&apos;)) or ([construction]=&apos;living_street&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="8" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-linejoin="round" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and ([construction]=&apos;service&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="7" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-linejoin="round" stroke-dasharray="8, 6"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;)) and ([construction]=&apos;cycleway&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(102,153,255)" stroke-width="1.2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="2, 6"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="8.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="1, 9"/>
      <LineSymbolizer stroke="rgb(253,253,253)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 1,1, 8"/>
      <LineSymbolizer stroke="rgb(236,236,236)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 2,1, 7"/>
      <LineSymbolizer stroke="rgb(202,202,202)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 3,1, 6"/>
      <LineSymbolizer stroke="rgb(175,175,175)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 4,1, 5"/>
      <LineSymbolizer stroke="rgb(161,161,161)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 5,1, 4"/>
      <LineSymbolizer stroke="rgb(155,155,155)" stroke-width="3" stroke-linejoin="round" stroke-dasharray="0, 6,1, 3"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;disused&apos;) or ([railway]=&apos;abandoned&apos;)) or ([railway]=&apos;construction&apos;)) and not (([highway]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="2, 4"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="8, 12"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="0, 11,8, 1"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;spur-siding-yard&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;spur-siding-yard&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="1, 9"/>
      <LineSymbolizer stroke="rgb(253,253,253)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 1,1, 8"/>
      <LineSymbolizer stroke="rgb(236,236,236)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 2,1, 7"/>
      <LineSymbolizer stroke="rgb(202,202,202)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 3,1, 6"/>
      <LineSymbolizer stroke="rgb(175,175,175)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 4,1, 5"/>
      <LineSymbolizer stroke="rgb(161,161,161)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 5,1, 4"/>
      <LineSymbolizer stroke="rgb(155,155,155)" stroke-width="2" stroke-linejoin="round" stroke-dasharray="0, 6,1, 3"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;spur-siding-yard&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="0.80000000000000004" stroke-linejoin="round" stroke-dasharray="0, 8,11, 1"/>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;narrow_gauge&apos;) or ([railway]=&apos;funicular&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;narrow_gauge&apos;) or ([railway]=&apos;funicular&apos;)) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="5" stroke-dasharray="5, 3"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1.5"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;miniature&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1.2"/>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-dasharray="1, 10"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;tram&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="1" stroke-dasharray="5, 3"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;tram&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2" stroke-dasharray="5, 3"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;light_rail&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2" stroke-dasharray="5, 3"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;light_rail&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;subway&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-dasharray="5, 3"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;subway&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(((([highway]=&apos;tertiary&apos;) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;road&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(221,221,221)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="4.7000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="7.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;living_street&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="4.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;)))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and not (([service]=&apos;INT-minor&apos;)))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;service&apos;) and ([service]=&apos;INT-minor&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="5.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;pedestrian&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(237,237,237)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;platform&apos;) or ([railway]=&apos;platform&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;turntable&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1.5"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;steps&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(250,128,114)" stroke-width="5" stroke-dasharray="2, 1"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;bridleway&apos;) or (([highway]=&apos;path&apos;) and ([horse]=&apos;designated&apos;))) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="1.2" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;footway&apos;) or (([highway]=&apos;path&apos;) and ([foot]=&apos;designated&apos;))) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(250,128,114)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;path&apos;) and not (((([bicycle]=&apos;designated&apos;) or ([foot]=&apos;designated&apos;)) or ([horse]=&apos;designated&apos;)))) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="6, 3"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;platform&apos;) or ([railway]=&apos;platform&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,187)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;steps&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-opacity="0.40000000000000002"/>
      <LineSymbolizer stroke="rgb(250,128,114)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;cycleway&apos;) or (([highway]=&apos;path&apos;) and ([bicycle]=&apos;designated&apos;))) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="1.2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 3"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;byway&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(255,204,0)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;track&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="1.2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(222,189,156)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="2, 4"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;unsurfaced&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="5" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(222,189,156)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 6"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;runway&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="7"/>
    </Rule>
    <Rule>
      <Filter>(([aeroway]=&apos;runway&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="18"/>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;taxiway&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([aeroway]=&apos;taxiway&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>(([aeroway]=&apos;taxiway&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="6"/>
    </Rule>
  </Style>
  <Style name="minor-roads-fill-links">
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,215,165)" stroke-width="15.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="4.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary_link&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,179)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="necountries">
    <Rule>
      <MinScaleDenominator>50000000</MinScaleDenominator>
      <MaxScaleDenominator>500000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="0.5"/>
    </Rule>
  </Style>
  <Style name="nepopulated">
    <Rule>
      <Filter>([SCALERANK]=1)</Filter>
      <MinScaleDenominator>25000000</MinScaleDenominator>
      <MaxScaleDenominator>100000000</MaxScaleDenominator>
      <TextSymbolizer dy="2" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(128,128,128)">[NAMEASCII]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="piers">
    <Rule>
      <Filter>(([man_made]=&apos;breakwater&apos;) or ([man_made]=&apos;groyne&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;pier&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="1.5"/>
    </Rule>
    <Rule>
      <Filter>(([man_made]=&apos;breakwater&apos;) or ([man_made]=&apos;groyne&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;pier&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="3"/>
    </Rule>
    <Rule>
      <Filter>(([man_made]=&apos;breakwater&apos;) or ([man_made]=&apos;groyne&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="4"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;pier&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="7"/>
    </Rule>
  </Style>
  <Style name="piers-area">
    <Rule>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(242,239,233)"/>
    </Rule>
  </Style>
  <Style name="points">
    <Rule>
      <Filter>([tourism]=&apos;alpine_hut&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/alpinehut.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;shelter&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shelter2.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;atm&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/atm2.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bank&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/bank2.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bar&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/bar.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bicycle_rental&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/rental_bicycle.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;bus_stop&apos;) or ([highway]=&apos;bus_stop&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/bus_stop_small.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;bus_stop&apos;) or ([highway]=&apos;bus_stop&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/bus_stop.p.12.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bus_station&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/bus_station.n.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;traffic_signals&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/traffic_light.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;cafe&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/cafe.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;camp_site&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/camping.n.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;ford&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/transport_ford.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;caravan_site&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/caravan_park.p.24.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;car_sharing&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/car_share.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;chalet&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/chalet.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;cinema&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/cinema.p.24.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;fire_station&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/firestation.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;fuel&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/fuel.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;guest_house&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/guest_house.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;bed_and_breakfast&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/bandb.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;hospital&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/hospital.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;hostel&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/hostel.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;hotel&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/hotel2.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;motel&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/motel.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;information&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/information.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;embassy&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/embassy.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;library&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/library.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;courthouse&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/amenity_court.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;lock&apos;) or ([lock]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/lock_gate.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;mast&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/communications.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;museum&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/museum.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;parking&apos;) and ((([access]=&apos;public&apos;) or ([access]=&apos;yes&apos;)) or not (([access]!=&apos;&apos;))))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/parking.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;parking&apos;) and ((([access]!=&apos;&apos;) and not (([access]=&apos;public&apos;))) and not (([access]=&apos;yes&apos;))))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/parking_private.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;pharmacy&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/pharmacy.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;place_of_worship&apos;) and ([religion]=&apos;christian&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/christian3.p.14.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;place_of_worship&apos;) and ([religion]=&apos;muslim&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/islamic3.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;place_of_worship&apos;) and ([religion]=&apos;sikh&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/sikh3.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;place_of_worship&apos;) and ([religion]=&apos;jewish&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/jewish3.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;place_of_worship&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/place_of_worship3.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;police&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/police.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;post_box&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/post_box.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;post_office&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/post_office.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;pub&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/pub.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;biergarten&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/biergarten.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;recycling&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/recycling.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;restaurant&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/restaurant.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;fast_food&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/fast_food.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;telephone&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/telephone.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;emergency_phone&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/sosphone.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;theatre&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/theatre.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;toilets&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/toilets.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;drinking_water&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/food_drinkingtap.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;prison&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/amenity_prison.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;viewpoint&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/view_point.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;veterinary&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/amenity_veterinary.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bench&apos;)</Filter>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/amenity_bench.p.8.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;waste_basket&apos;)</Filter>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/amenity_waste_basket.p.8.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;water_tower&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/tower_water.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([historic]=&apos;memorial&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/tourist_memorial.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([historic]=&apos;archaeological_site&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/tourist_archaeological2.glow.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;supermarket&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_supermarket.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;bakery&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_bakery.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;bicycle&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shopping_bicycle.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;books&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_books.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;butcher&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_butcher.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;car&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shopping_car.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;car_repair&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shopping_car_repair.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([shop]=&apos;clothes&apos;) or ([shop]=&apos;fashion&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_clothes.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;computer&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_computer.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;convenience&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_convenience.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;department_store&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/department_store.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;doityourself&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_diy.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;dry_cleaning&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_dry_cleaning.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;florist&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/florist.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;gift&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_gift.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;greengrocer&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_greengrocer.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;hairdresser&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_hairdresser.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;jewelry&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_jewelry.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;mobile_phone&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_mobile_phone.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;optician&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_optician.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([shop]=&apos;pet&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/shop_pet.p_16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;playground&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/playground.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;picnic_site&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/picnic.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;slipway&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/transport_slipway.p.20.png" placement="interior"/>
    </Rule>
  </Style>
  <Style name="power_line">
    <Rule>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(119,119,119)" stroke-width="1"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(119,119,119)" stroke-width="1.5"/>
    </Rule>
  </Style>
  <Style name="power_minorline">
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(119,119,119)" stroke-width="0.5"/>
    </Rule>
  </Style>
  <Style name="power_poles">
    <Rule>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/power_pole.png"/>
    </Rule>
  </Style>
  <Style name="power_towers">
    <Rule>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/power_tower_3x3.png"/>
    </Rule>
    <Rule>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/power_tower_5x5.png"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/power_tower.png"/>
    </Rule>
  </Style>
  <Style name="roads">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>25000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="1.3999999999999999"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,155,192)" stroke-width="2.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>25000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(169,219,169)" stroke-width="0.40000000000000002"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(151,211,151)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(151,211,151)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(151,211,151)" stroke-width="2.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="1.2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(236,152,154)" stroke-width="2.5"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,204,139)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,204,139)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;rail&apos;)</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>12500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="0.59999999999999998"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1" stroke-dasharray="5, 2"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;tram&apos;) or ([railway]=&apos;light_rail&apos;)) or ([railway]=&apos;narrow_gauge&apos;)) or ([railway]=&apos;funicular&apos;))</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(204,204,204)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;rail&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2" stroke-dasharray="5, 2"/>
    </Rule>
    <Rule>
      <Filter>(((([railway]=&apos;tram&apos;) or ([railway]=&apos;light_rail&apos;)) or ([railway]=&apos;narrow_gauge&apos;)) or ([railway]=&apos;funicular&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;preserved&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1.5" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;preserved&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1" stroke-linejoin="round" stroke-dasharray="0, 1,8, 1"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;INT-preserved-ssy&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1" stroke-linejoin="round"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;INT-preserved-ssy&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="0.80000000000000004" stroke-linejoin="round" stroke-dasharray="0, 1,8, 1"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;monorail&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(119,119,119)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="2, 3"/>
    </Rule>
  </Style>
  <Style name="roads-text-name">
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;primary&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="8">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;secondary&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="8" halo-radius="1" halo-fill="rgb(254,215,165)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;primary&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;primary&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;secondary&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" halo-fill="rgb(254,215,165)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;secondary&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" halo-radius="1" halo-fill="rgb(254,215,165)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;tertiary&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;tertiary&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;proposed&apos;) or ([highway]=&apos;construction&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" spacing="300" fontset-name="book-fonts" size="8" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="line" spacing="300" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <ElseFilter/>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <ElseFilter/>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="11" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="roads-text-ref">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]&lt;=6))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]=7))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield6.png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]=8))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield7.png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;trunk&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/tru_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;primary&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/pri_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/sec_shield[length].png" placement="line" spacing="750" minimum-distance="40" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/ter_shield[length].png" placement="line" spacing="750" minimum-distance="40" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;unclassified&apos;) or ([highway]=&apos;residential&apos;)) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer spacing="750" minimum-distance="18" fontset-name="bold-fonts" halo-radius="1">[ref]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([aeroway]=&apos;runway&apos;) or ([aeroway]=&apos;taxiway&apos;)) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="line" spacing="750" minimum-distance="18" fontset-name="book-fonts" halo-radius="1" fill="rgb(51,51,51)">[ref]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="roads-text-ref-low-zoom">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]&lt;=6))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]=7))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield6.png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) and ([length]=8))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/mot_shield7.png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;trunk&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/tru_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;primary&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/pri_shield[length].png" placement="line" spacing="750" minimum-distance="30" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;secondary&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <ShieldSymbolizer file="symbols/sec_shield[length].png" placement="line" spacing="750" minimum-distance="40" fontset-name="bold-fonts" fill="rgb(255,255,255)">[ref]</ShieldSymbolizer>
    </Rule>
  </Style>
  <Style name="sports_grounds">
    <Rule>
      <Filter>(([leisure]=&apos;sports_centre&apos;) or ([leisure]=&apos;stadium&apos;))</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(51,204,153)"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;track&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(116,220,186)"/>
      <LineSymbolizer stroke="rgb(136,136,136)" stroke-width="0.5"/>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;pitch&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(138,211,175)"/>
      <LineSymbolizer stroke="rgb(136,136,136)" stroke-width="0.5"/>
    </Rule>
  </Style>
  <Style name="state">
    <Rule>
      <Filter>([place]=&apos;state&apos;)</Filter>
      <MinScaleDenominator>25000000</MinScaleDenominator>
      <MaxScaleDenominator>50000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(157,108,157)">[ref]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([place]=&apos;state&apos;)</Filter>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <MaxScaleDenominator>25000000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(157,108,157)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([place]=&apos;state&apos;)</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <TextSymbolizer dy="0" wrap-width="0" fontset-name="oblique-fonts" size="11" halo-radius="1" fill="rgb(157,108,157)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="stations">
    <Rule>
      <Filter>([railway]=&apos;subway_entrance&apos;)</Filter>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/walking.n.12.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/halt.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/station_small.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and ([disused]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/station_disused.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/station.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;halt&apos;) or ([railway]=&apos;tram_stop&apos;)) or ([aerialway]=&apos;station&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/halt.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;halt&apos;) or ([railway]=&apos;tram_stop&apos;)) or ([aerialway]=&apos;station&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/station_small.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;halt&apos;) or ([railway]=&apos;tram_stop&apos;)) or ([aerialway]=&apos;station&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="-8" wrap-width="0" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([railway]=&apos;halt&apos;) or ([railway]=&apos;tram_stop&apos;)) or ([aerialway]=&apos;station&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="-10" wrap-width="0" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="-8" wrap-width="0" fontset-name="bold-fonts" size="9" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="-10" wrap-width="0" fontset-name="bold-fonts" size="11" halo-radius="1" fill="rgb(102,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;station&apos;) and ([disused]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="-9" wrap-width="0" fontset-name="bold-fonts" size="9" halo-radius="1" fill="rgb(128,128,128)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="suburb">
    <Rule>
      <Filter>([place]=&apos;suburb&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([place]=&apos;suburb&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" size="13" halo-radius="1" fill="rgb(119,119,119)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="symbols">
    <Rule>
      <Filter>([aeroway]=&apos;helipad&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/helipad.p.16.png"/>
      <TextSymbolizer placement="interior" dy="-10" wrap-width="0" fontset-name="bold-fonts" size="8" halo-radius="1" fill="rgb(102,146,218)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;airport&apos;)</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/airport.p.16.png"/>
      <TextSymbolizer placement="interior" dy="-12" wrap-width="0" fontset-name="bold-fonts" size="8" halo-radius="1" fill="rgb(102,146,218)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;airport&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="0" fontset-name="bold-fonts" size="9" halo-radius="1" fill="rgb(102,146,218)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;aerodrome&apos;)</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/aerodrome.p.16.png"/>
      <TextSymbolizer placement="interior" dy="-12" wrap-width="0" fontset-name="oblique-fonts" size="8" halo-radius="1" fill="rgb(102,146,218)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;aerodrome&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="0" fontset-name="oblique-fonts" size="8" halo-radius="1" fill="rgb(102,146,218)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;level_crossing&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/level_crossing.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([railway]=&apos;level_crossing&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/level_crossing2.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;lighthouse&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/lighthouse.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;peak&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/peak.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;volcano&apos;)</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/volcano.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;cave_entrance&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/poi_cave.p.16.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;spring&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/spring.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;tree&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer ignore-placement="true" file="symbols/tree.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;tree&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer ignore-placement="true" file="symbols/tree2.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>((([power]=&apos;generator&apos;) and (([generator:source]=&apos;wind&apos;) or ([power_source]=&apos;wind&apos;))) or ([man_made]=&apos;power_wind&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/power_wind.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;windmill&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer file="symbols/windmill.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;mast&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer file="symbols/communications.p.20.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([highway]=&apos;mini_roundabout&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/mini_round.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;gate&apos;) or ([barrier]=&apos;gate&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/gate2.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>([barrier]=&apos;lift_gate&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/liftgate.png" placement="interior"/>
    </Rule>
    <Rule>
      <Filter>(([barrier]=&apos;bollard&apos;) or ([barrier]=&apos;block&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="false" file="symbols/bollard.png" placement="interior"/>
    </Rule>
  </Style>
  <Style name="text">
    <Rule>
      <Filter>([place]=&apos;island&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="0" wrap-width="0" fontset-name="oblique-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((((([amenity]=&apos;pub&apos;) or ([amenity]=&apos;restaurant&apos;)) or ([amenity]=&apos;cafe&apos;)) or ([amenity]=&apos;fast_food&apos;)) or ([amenity]=&apos;biergarten&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="34" fontset-name="bold-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bar&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="11" wrap-width="0" fontset-name="bold-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([amenity]=&apos;library&apos;) or ([amenity]=&apos;theatre&apos;)) or ([amenity]=&apos;courthouse&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="12" wrap-width="0" fontset-name="bold-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;cinema&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="14" wrap-width="0" fontset-name="bold-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;parking&apos;) and (([access]=&apos;public&apos;) or not (([access]!=&apos;&apos;))))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="34" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;parking&apos;) and (([access]!=&apos;&apos;) and not (([access]=&apos;public&apos;))))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="34" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,204,175)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;police&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" wrap-width="30" fontset-name="book-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;fire_station&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="30" fontset-name="book-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;place_of_worship&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="11" wrap-width="30" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;wood&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="10" fontset-name="book-fonts" halo-radius="2">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;peak&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="5" fontset-name="book-fonts" halo-radius="1" fill="rgb(165,42,42)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;peak&apos;) and not (([name]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="6" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(165,42,42)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;peak&apos;) and ([name]!=&apos;&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="18" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(165,42,42)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;volcano&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="5" fontset-name="book-fonts" halo-radius="1" fill="rgb(165,42,42)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;volcano&apos;) and not (([name]!=&apos;&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="6" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(165,42,42)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([natural]=&apos;volcano&apos;) and ([name]!=&apos;&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="16" fontset-name="oblique-fonts" size="9" halo-radius="1" fill="rgb(165,42,42)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;cave_entrance&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(165,42,42)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([historic]=&apos;memorial&apos;) or ([historic]=&apos;archaeological_site&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="12" wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(165,42,42)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(((([natural]=&apos;water&apos;) or ([natural]=&apos;lake&apos;)) or ([landuse]=&apos;reservoir&apos;)) or ([landuse]=&apos;basin&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([leisure]!=&apos;&apos;) or ([landuse]!=&apos;&apos;)) and ([point]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="10" fontset-name="book-fonts" size="9" halo-radius="2">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;bay&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="20" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;spring&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" wrap-width="20" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;alpine_hut&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;alpine_hut&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="22" fontset-name="oblique-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;shelter&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
      <TextSymbolizer placement="interior" dy="22" fontset-name="oblique-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[ele]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;bank&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="0" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([tourism]=&apos;hotel&apos;) or ([tourism]=&apos;hostel&apos;)) or ([tourism]=&apos;chalet&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="11" wrap-width="0" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;embassy&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="8" wrap-width="0" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;guest_house&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="0" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;bed_and_breakfast&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="7" wrap-width="0" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;fuel&apos;) or ([amenity]=&apos;bus_station&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="0" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;camp_site&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="15" wrap-width="70" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;caravan_site&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="19" wrap-width="70" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;lock&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" wrap-width="70" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(0,102,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;marina&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="30" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(0,0,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([leisure]=&apos;marina&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="30" fontset-name="book-fonts" halo-radius="1" fill="rgb(0,0,255)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;theme_park&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="30" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;theme_park&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="30" fontset-name="book-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;museum&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" wrap-width="0" fontset-name="book-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;prison&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="16" wrap-width="0" fontset-name="book-fonts" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;attraction&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="10" fontset-name="book-fonts" halo-radius="2" fill="rgb(102,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;university&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="16" fontset-name="bold-fonts" size="9" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([amenity]=&apos;school&apos;) or ([amenity]=&apos;college&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="14" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;kindergarten&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="14" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;lighthouse&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="16" wrap-width="12" fontset-name="book-fonts" size="9" halo-radius="2" fill="rgb(0,0,51)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([man_made]=&apos;windmill&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="12" wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(115,74,8)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;hospital&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="10" wrap-width="24" fontset-name="book-fonts" size="8" halo-radius="2" fill="rgb(218,0,146)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([amenity]=&apos;pharmacy&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="12" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(218,0,146)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((((((((((([shop]=&apos;bakery&apos;) or ([shop]=&apos;clothes&apos;)) or ([shop]=&apos;fashion&apos;)) or ([shop]=&apos;convenience&apos;)) or ([shop]=&apos;doityourself&apos;)) or ([shop]=&apos;hairdresser&apos;)) or ([shop]=&apos;butcher&apos;)) or ([shop]=&apos;car&apos;)) or ([shop]=&apos;car_repair&apos;)) or ([shop]=&apos;bicycle&apos;)) or ([shop]=&apos;florist&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="12" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(153,51,153)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([shop]=&apos;supermarket&apos;) or ([shop]=&apos;department_store&apos;))</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <TextSymbolizer placement="interior" dy="9" wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(153,51,153)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([military]=&apos;danger_area&apos;)</Filter>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="10" fontset-name="bold-fonts" size="9" halo-radius="1" fill="rgb(255,192,203)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([aeroway]=&apos;gate&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <TextSymbolizer placement="interior" wrap-width="10" fontset-name="book-fonts" halo-radius="1" fill="rgb(170,102,204)">[ref]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="theme_park">
    <Rule>
      <Filter>([tourism]=&apos;theme_park&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(115,74,8)" stroke-width="1.5" stroke-opacity="0.59999999999999998" stroke-dasharray="9, 3"/>
    </Rule>
    <Rule>
      <Filter>([tourism]=&apos;theme_park&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(115,74,8)" stroke-width="2.5" stroke-opacity="0.59999999999999998" stroke-dasharray="9, 3"/>
    </Rule>
  </Style>
  <Style name="town">
    <Rule>
      <Filter>((([place]=&apos;town&apos;) or ([place]=&apos;large_town&apos;)) or ([place]=&apos;small_town&apos;))</Filter>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="8" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([place]=&apos;town&apos;) or ([place]=&apos;large_town&apos;)) or ([place]=&apos;small_town&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([place]=&apos;town&apos;) or ([place]=&apos;large_town&apos;)) or ([place]=&apos;small_town&apos;))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="14" halo-radius="1" fill="rgb(119,119,119)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="tracks-notunnel-nobridge">
    <Rule>
      <Filter>([tracktype]=&apos;grade1&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-opacity="0.40000000000000002"/>
      <LineSymbolizer stroke="rgb(179,119,0)" stroke-width="2" stroke-opacity="0.69999999999999996"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade2&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(168,112,0)" stroke-width="1.5" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="9, 4"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade3&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="1.5" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade4&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 7,1, 5"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade5&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.80000000000000004" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 5"/>
    </Rule>
    <Rule>
      <ElseFilter/>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-opacity="0.40000000000000002" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="1.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
  </Style>
  <Style name="tracks-tunnels">
    <Rule>
      <Filter>([tracktype]=&apos;grade1&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5"/>
      <LineSymbolizer stroke="rgb(179,119,0)" stroke-width="2" stroke-opacity="0.5"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade2&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(168,112,0)" stroke-width="1.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade3&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade4&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 7,1, 5"/>
    </Rule>
    <Rule>
      <Filter>([tracktype]=&apos;grade5&apos;)</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="2" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="1, 5"/>
    </Rule>
    <Rule>
      <ElseFilter/>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <LineSymbolizer stroke="rgb(153,102,0)" stroke-width="1.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="3, 4"/>
    </Rule>
  </Style>
  <Style name="trams">
    <Rule>
      <Filter>([railway]=&apos;tram&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;tram&apos;) and not (([bridge]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2"/>
    </Rule>
    <Rule>
      <Filter>(([railway]=&apos;tram&apos;) and ([bridge]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="5"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
      <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2"/>
    </Rule>
  </Style>
  <Style name="tunnels-casing">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="3" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="6.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="10" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(80,96,119)" stroke-width="13" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="4" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="8" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="11" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(71,113,71)" stroke-width="14" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="4" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="8" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="11" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(141,67,70)" stroke-width="14" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="4" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="10" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="12" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(163,123,72)" stroke-width="17" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="6" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="7.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="4.5" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="8" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="11" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="11" stroke-dasharray="4, 2"/>
    </Rule>
    <Rule>
      <Filter>((((([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;)) or ([highway]=&apos;residential&apos;)) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="16" stroke-dasharray="4, 2"/>
    </Rule>
  </Style>
  <Style name="tunnels-fill">
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(214,223,234)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(214,223,234)" stroke-width="5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(214,223,234)" stroke-width="8.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;motorway&apos;) or ([highway]=&apos;motorway_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(214,223,234)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(205,234,205)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(205,234,205)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(205,234,205)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;trunk&apos;) or ([highway]=&apos;trunk_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(205,234,205)" stroke-width="12" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(244,195,196)" stroke-width="2.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(244,195,196)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(244,195,196)" stroke-width="9" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;primary&apos;) or ([highway]=&apos;primary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(244,195,196)" stroke-width="12" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,224,184)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,224,184)" stroke-width="8" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,224,184)" stroke-width="10" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;secondary&apos;) or ([highway]=&apos;secondary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(254,224,184)" stroke-width="14" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,204)" stroke-width="5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,204)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,204)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([highway]=&apos;tertiary&apos;) or ([highway]=&apos;tertiary_link&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,204)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6.5" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9.4000000000000004" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>((([highway]=&apos;residential&apos;) or ([highway]=&apos;unclassified&apos;)) or ([highway]=&apos;road&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="13" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
  </Style>
  <Style name="turning_circle-casing">
    <Rule>
      <Filter>([int_tc_type]=&apos;tertiary&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-tert-casing.18.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-casing.14.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.14.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-casing.18.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;service&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-casing.14.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.18.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;tertiary&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-tert-casing.24.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-casing.24.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;service&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-casing.16.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.24.png"/>
    </Rule>
  </Style>
  <Style name="turning_circle-fill">
    <Rule>
      <Filter>([int_tc_type]=&apos;tertiary&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-tert-fill.16.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.12.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-livs-fill.12.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.16.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;service&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.12.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-livs-fill.16.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;tertiary&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-tert-fill.22.png"/>
    </Rule>
    <Rule>
      <Filter>(([int_tc_type]=&apos;residential&apos;) or ([int_tc_type]=&apos;unclassified&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.22.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;service&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-uncl-fill.14.png"/>
    </Rule>
    <Rule>
      <Filter>([int_tc_type]=&apos;living_street&apos;)</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <PointSymbolizer allow-overlap="true" ignore-placement="true" file="symbols/turning_circle-livs-fill.22.png"/>
    </Rule>
  </Style>
  <Style name="village">
    <Rule>
      <Filter>(([place]=&apos;village&apos;) or ([place]=&apos;large_village&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" size="9" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([place]=&apos;village&apos;) or ([place]=&apos;large_village&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <TextSymbolizer wrap-width="0" fontset-name="book-fonts" size="12" halo-radius="1" fill="rgb(119,119,119)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="water-areas-overlay">
    <Rule>
      <Filter>(([natural]=&apos;marsh&apos;) or ([natural]=&apos;wetland&apos;))</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/marsh.png"/>
    </Rule>
  </Style>
  <Style name="water-lines-casing">
    <Rule>
      <Filter>((([waterway]=&apos;stream&apos;) or ([waterway]=&apos;ditch&apos;)) or ([waterway]=&apos;drain&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1.5"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;stream&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5"/>
    </Rule>
  </Style>
  <Style name="water-lines-low-zoom">
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="0.69999999999999996"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="1.2"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>200000</MinScaleDenominator>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="1.6000000000000001"/>
    </Rule>
  </Style>
  <Style name="water_areas">
    <Rule>
      <Filter>([natural]=&apos;glacier&apos;)</Filter>
      <MinScaleDenominator>3000000</MinScaleDenominator>
      <MaxScaleDenominator>12500000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,204,255)" stroke-width="1.5" stroke-dasharray="4, 2"/>
      <PolygonPatternSymbolizer file="symbols/glacier.png"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;glacier&apos;)</Filter>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(153,204,255)" stroke-width="1.5" stroke-dasharray="4, 2"/>
      <PolygonPatternSymbolizer file="symbols/glacier2.png"/>
    </Rule>
    <Rule>
      <Filter>((([waterway]=&apos;dock&apos;) or ([waterway]=&apos;mill_pond&apos;)) or ([waterway]=&apos;canal&apos;))</Filter>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <PolygonSymbolizer gamma="0.75" fill="rgb(181,208,208)"/>
    </Rule>
    <Rule>
      <Filter>([landuse]=&apos;basin&apos;)</Filter>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <PolygonSymbolizer gamma="0.75" fill="rgb(181,208,208)"/>
    </Rule>
    <Rule>
      <Filter>(((((([natural]=&apos;lake&apos;) or ([natural]=&apos;water&apos;)) or ([landuse]=&apos;reservoir&apos;)) or ([waterway]=&apos;riverbank&apos;)) or ([landuse]=&apos;water&apos;)) or ([natural]=&apos;bay&apos;))</Filter>
      <MaxScaleDenominator>12500000</MaxScaleDenominator>
      <PolygonSymbolizer gamma="0.75" fill="rgb(181,208,208)"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;mud&apos;)</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <PolygonPatternSymbolizer file="symbols/mud.png"/>
    </Rule>
    <Rule>
      <Filter>([natural]=&apos;land&apos;)</Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(242,239,233)"/>
    </Rule>
  </Style>
  <Style name="water_lines">
    <Rule>
      <Filter>([waterway]=&apos;weir&apos;)</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;wadi&apos;)</Filter>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="1" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 4"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;wadi&apos;)</Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 4"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="5" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MinScaleDenominator>2500</MinScaleDenominator>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="10" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>([waterway]=&apos;river&apos;)</Filter>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="12" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="3" stroke-linejoin="round" stroke-linecap="round"/>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and not (([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="4" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([waterway]=&apos;stream&apos;) or ([waterway]=&apos;ditch&apos;)) or ([waterway]=&apos;drain&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;river&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="6" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
      <TextSymbolizer placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;river&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="7" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/>
      <TextSymbolizer placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;river&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>2500</MinScaleDenominator>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="11" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7"/>
      <TextSymbolizer placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;river&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>2500</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="13" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9"/>
      <TextSymbolizer placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="7" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and not ((([tunnel]=&apos;yes&apos;) or ([disused]=&apos;yes&apos;))))</Filter>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="11" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;canal&apos;) and not (((([tunnel]=&apos;yes&apos;) or ([disused]=&apos;yes&apos;)) or ([lock]=&apos;yes&apos;))))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="11" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([waterway]=&apos;canal&apos;) and not ((([tunnel]=&apos;yes&apos;) or ([disused]=&apos;yes&apos;)))) and ([lock]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="7" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer wrap-width="20" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;derelict_canal&apos;) or (([waterway]=&apos;canal&apos;) and ([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <MaxScaleDenominator>200000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,228,208)" stroke-width="1.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 4"/>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;derelict_canal&apos;) or (([waterway]=&apos;canal&apos;) and ([disused]=&apos;yes&apos;)))</Filter>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,228,208)" stroke-width="2.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 6"/>
      <TextSymbolizer placement="line" spacing="600" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(128,209,174)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;derelict_canal&apos;) or (([waterway]=&apos;canal&apos;) and ([disused]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,228,208)" stroke-width="4.5" stroke-opacity="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-dasharray="4, 8"/>
      <TextSymbolizer placement="line" spacing="600" fontset-name="book-fonts" halo-radius="1" fill="rgb(128,209,174)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;stream&apos;) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="2.3999999999999999" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(243,247,247)" stroke-width="1.2"/>
    </Rule>
    <Rule>
      <Filter>(([waterway]=&apos;stream&apos;) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="2"/>
      <TextSymbolizer placement="line" spacing="600" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>((([waterway]=&apos;drain&apos;) or ([waterway]=&apos;ditch&apos;)) and ([tunnel]=&apos;yes&apos;))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="2" stroke-dasharray="4, 2"/>
      <LineSymbolizer stroke="rgb(243,247,247)" stroke-width="1"/>
    </Rule>
    <Rule>
      <Filter>((([waterway]=&apos;drain&apos;) or ([waterway]=&apos;ditch&apos;)) and not (([tunnel]=&apos;yes&apos;)))</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="1"/>
      <TextSymbolizer placement="line" spacing="600" fontset-name="book-fonts" size="8" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="waterway-bridges">
    <Rule>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="7" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="6" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      <LineSymbolizer stroke="rgb(0,0,0)" stroke-width="11" stroke-linejoin="round"/>
      <LineSymbolizer stroke="rgb(181,208,208)" stroke-width="10" stroke-linejoin="round" stroke-linecap="round"/>
      <TextSymbolizer placement="line" fontset-name="book-fonts" size="9" halo-radius="1" fill="rgb(102,153,204)">[name]</TextSymbolizer>
    </Rule>
  </Style>
  <Style name="world">
    <Rule>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <MaxScaleDenominator>250000000000</MaxScaleDenominator>
      <PolygonSymbolizer fill="rgb(242,239,233)"/>
    </Rule>
  </Style>
  <Layer name="world" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>world</StyleName>
    <Datasource>
      <Parameter name="file">world_boundaries/shoreline_300</Parameter>
      <Parameter name="type">shape</Parameter>
    </Datasource>
  </Layer>
  <Layer name="coast-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>coast-poly</StyleName>
    <Datasource>
      <Parameter name="file">world_boundaries/processed_p</Parameter>
      <Parameter name="type">shape</Parameter>
    </Datasource>
  </Layer>
  <Layer name="builtup" srs="+proj=merc +datum=WGS84 +over">
    <StyleName>builtup</StyleName>
    <Datasource>
      <Parameter name="file">world_boundaries/builtup_area</Parameter>
      <Parameter name="type">shape</Parameter>
    </Datasource>
  </Layer>
  <Layer name="necountries" srs="+init=epsg:4326">
    <StyleName>necountries</StyleName>
    <Datasource>
      <Parameter name="file">world_boundaries/ne_110m_admin_0_boundary_lines_land.shp</Parameter>
      <Parameter name="type">shape</Parameter>
    </Datasource>
  </Layer>
  <Layer name="nepopulated" srs="+init=epsg:4326">
    <StyleName>nepopulated</StyleName>
    <Datasource>
      <Parameter name="encoding">latin1</Parameter>
      <Parameter name="file">world_boundaries/ne_10m_populated_places.shp</Parameter>
      <Parameter name="type">shape</Parameter>
    </Datasource>
  </Layer>
  <Layer name="landcover" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>landcover</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,aeroway,amenity,landuse,leisure,man_made,military,&quot;natural&quot;,power,tourism,name,highway,&#10;       case when religion in (&apos;christian&apos;,&apos;jewish&apos;) then religion else &apos;INT-generic&apos;::text end as religion&#10;       from planet_osm_polygon&#10;       where landuse is not null&#10;          or leisure is not null&#10;          or aeroway in (&apos;apron&apos;,&apos;aerodrome&apos;)&#10;          or amenity in (&apos;parking&apos;,&apos;university&apos;,&apos;college&apos;,&apos;school&apos;,&apos;hospital&apos;,&apos;kindergarten&apos;,&apos;grave_yard&apos;,&apos;prison&apos;)&#10;          or military in (&apos;barracks&apos;,&apos;danger_area&apos;)&#10;          or &quot;natural&quot; in (&apos;field&apos;,&apos;beach&apos;,&apos;desert&apos;,&apos;heath&apos;,&apos;mud&apos;,&apos;grassland&apos;,&apos;wood&apos;,&apos;sand&apos;,&apos;scrub&apos;)&#10;          or power in (&apos;station&apos;,&apos;sub_station&apos;,&apos;generator&apos;)&#10;          or tourism in (&apos;attraction&apos;,&apos;camp_site&apos;,&apos;caravan_site&apos;,&apos;picnic_site&apos;,&apos;zoo&apos;)&#10;          or highway in (&apos;services&apos;,&apos;rest_area&apos;)&#10;       order by z_order,way_area desc&#10;      ) as leisure</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="landcover_line" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>landcover_line</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way&#10;       from planet_osm_line&#10;       where man_made=&apos;cutline&apos;&#10;      ) as leisure</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="sports_grounds" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>sports_grounds</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,leisure,&#10;       case when leisure=&apos;pitch&apos; then 2&#10;            when leisure=&apos;track&apos; then 1&#10;            else 0 end as prio&#10;       from planet_osm_polygon&#10;       where leisure in (&apos;sports_centre&apos;,&apos;stadium&apos;,&apos;pitch&apos;,&apos;track&apos;)&#10;       order by z_order,prio,way_area desc&#10;      ) as sports_grounds</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="water-lines-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>water-lines-casing</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,waterway&#10;      from planet_osm_line&#10;      where waterway in (&apos;stream&apos;,&apos;drain&apos;,&apos;ditch&apos;)&#10;        and (tunnel is null or tunnel != &apos;yes&apos;)&#10;      ) as water_lines</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="water_areas" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>water_areas</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&quot;natural&quot;,waterway,landuse,name&#10;      from planet_osm_polygon&#10;      where (waterway in (&apos;dock&apos;,&apos;mill_pond&apos;,&apos;riverbank&apos;,&apos;canal&apos;)&#10;         or landuse in (&apos;reservoir&apos;,&apos;water&apos;,&apos;basin&apos;)&#10;         or &quot;natural&quot; in (&apos;lake&apos;,&apos;water&apos;,&apos;land&apos;,&apos;glacier&apos;,&apos;mud&apos;,&apos;bay&apos;))&#10;         and building is null&#10;      order by z_order,way_area desc&#10;      ) as water_areas</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="water-areas-overlay" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>water-areas-overlay</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&quot;natural&quot;&#10;      from planet_osm_polygon&#10;      where &quot;natural&quot; in (&apos;marsh&apos;,&apos;wetland&apos;) and building is null&#10;      order by z_order,way_area desc&#10;      ) as water_areas</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="glaciers-text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>glaciers-text</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name,way_area&#10;      from planet_osm_polygon&#10;      where &quot;natural&quot;=&apos;glacier&apos; and building is null&#10;      order by way_area desc&#10;      ) as glaciers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="water-lines-low-zoom" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>water-lines-low-zoom</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,waterway&#10;      from planet_osm_line&#10;      where waterway=&apos;river&apos;&#10;      ) as water_lines</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="water_lines" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>water_lines</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,waterway,disused,lock,name,&#10;      case when tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else tunnel end as tunnel&#10;      from planet_osm_line&#10;      where waterway in (&apos;weir&apos;,&apos;river&apos;,&apos;canal&apos;,&apos;derelict_canal&apos;,&apos;stream&apos;,&apos;drain&apos;,&apos;ditch&apos;,&apos;wadi&apos;)&#10;        and (bridge is null or bridge not in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;aqueduct&apos;))&#10;      order by z_order&#10;      ) as water_lines</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="dam" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>dam</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name from planet_osm_line where waterway=&apos;dam&apos;) as dam</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="marinas-area" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>marinas-area</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_polygon where leisure =&apos;marina&apos;) as marinas</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="piers-area" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>piers-area</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,man_made from planet_osm_polygon where man_made in (&apos;pier&apos;,&apos;breakwater&apos;,&apos;groyne&apos;)) as piers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="piers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>piers</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,man_made from planet_osm_line where man_made in (&apos;pier&apos;,&apos;breakwater&apos;,&apos;groyne&apos;)) as piers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="locks" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>locks</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,waterway from planet_osm_point where waterway=&apos;lock_gate&apos;) as locks</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>tunnels-casing</StyleName>
    <StyleName>tunnels-fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway from planet_osm_line where highway in (&apos;motorway&apos;,&apos;motorway_link&apos;,&apos;trunk&apos;,&apos;trunk_link&apos;,&apos;primary&apos;,&apos;primary_link&apos;,&apos;secondary&apos;,&apos;secondary_link&apos;,&apos;tertiary&apos;,&apos;tertiary_link&apos;,&apos;residential&apos;,&apos;unclassified&apos;) and tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) order by z_order) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="citywalls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>citywalls</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where &quot;historic&quot;=&apos;citywalls&apos;) as citywalls</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="castle_walls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>castle_walls</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where &quot;historic&quot;=&apos;castle_walls&apos;) as castle_walls</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="castle_walls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>castle_walls</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_polygon where &quot;historic&quot;=&apos;castle_walls&apos;) as castle_walls</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="landuse_overlay" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>landuse_overlay</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,landuse,leisure&#10;       from planet_osm_polygon&#10;       where (landuse = &apos;military&apos; or leisure=&apos;nature_reserve&apos;) and building is null&#10;      ) as landuse_overlay</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="turning_circle-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>turning_circle-casing</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select distinct on (p.way) p.way as way,l.highway as int_tc_type&#10;       from planet_osm_point p&#10;       join planet_osm_line l&#10;        on ST_DWithin(p.way,l.way,0.1)&#10;       join (values&#10;        (&apos;tertiary&apos;,1),&#10;        (&apos;unclassified&apos;,2),&#10;        (&apos;residential&apos;,3),&#10;        (&apos;living_street&apos;,4),&#10;        (&apos;service&apos;,5)&#10;       ) as v (highway,prio)&#10;        on v.highway=l.highway&#10;       where p.highway=&apos;turning_circle&apos;&#10;       order by p.way,v.prio&#10;      ) as turning_circle</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="footbikecycle-tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>footbikecycle-tunnels</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,horse,foot,bicycle from planet_osm_line where highway in (&apos;bridleway&apos;,&apos;footway&apos;,&apos;cycleway&apos;,&apos;path&apos;) and tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) order by z_order) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="tracks-tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>tracks-tunnels</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,tracktype from planet_osm_line where highway=&apos;track&apos; and tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;)) as tracks</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="line features" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>cliffs</StyleName>
    <StyleName>barriers</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,barrier,&quot;natural&quot;,man_made from planet_osm_line where barrier is not null or &quot;natural&quot; in (&apos;hedge&apos;,&apos;cliff&apos;) or man_made=&apos;embankment&apos;) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="polygon barriers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>barriers_area</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,barrier,&quot;natural&quot; from planet_osm_polygon where barrier is not null or &quot;natural&quot;=&apos;hedge&apos;) as barriers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="highway-area-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>highway-area-casing</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,railway from planet_osm_polygon&#10;       where highway in (&apos;residential&apos;,&apos;unclassified&apos;,&apos;pedestrian&apos;,&apos;service&apos;,&apos;footway&apos;,&apos;track&apos;,&apos;path&apos;,&apos;platform&apos;)&#10;          or railway=&apos;platform&apos;&#10;       order by z_order,way_area desc) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="minor-roads-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>minor-roads-casing-links</StyleName>
    <StyleName>minor-roads-casing</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,&#10;       case when tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else tunnel end as tunnel,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text else service end as service&#10;       from planet_osm_line&#10;       where highway in (&apos;motorway&apos;,&apos;motorway_link&apos;,&apos;trunk&apos;,&apos;trunk_link&apos;,&apos;primary&apos;,&apos;primary_link&apos;,&apos;secondary&apos;,&apos;secondary_link&apos;,&apos;tertiary&apos;,&apos;tertiary_link&apos;,&apos;residential&apos;,&apos;unclassified&apos;,&apos;road&apos;,&apos;service&apos;,&apos;pedestrian&apos;,&apos;raceway&apos;,&apos;living_street&apos;)&#10;       order by z_order) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="highway-area-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>highway-area-fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,railway,aeroway from planet_osm_polygon&#10;       where highway in (&apos;residential&apos;,&apos;unclassified&apos;,&apos;pedestrian&apos;,&apos;service&apos;,&apos;footway&apos;,&apos;living_street&apos;,&apos;track&apos;,&apos;path&apos;,&apos;platform&apos;,&apos;services&apos;)&#10;          or railway=&apos;platform&apos;&#10;          or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;,&apos;helipad&apos;)&#10;       order by z_order,way_area desc) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="buildings-lz" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>buildings-lz</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,building,railway,amenity from planet_osm_polygon&#10;       where railway=&apos;station&apos;&#10;          or building in (&apos;station&apos;,&apos;supermarket&apos;)&#10;          or amenity=&apos;place_of_worship&apos;&#10;       order by z_order,way_area desc) as buildings</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="buildings" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>buildings</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,aeroway,&#10;        case&#10;         when building in (&apos;residential&apos;,&apos;house&apos;,&apos;garage&apos;,&apos;garages&apos;,&apos;detached&apos;,&apos;terrace&apos;,&apos;apartments&apos;) then &apos;INT-light&apos;::text&#10;         else building&#10;        end as building&#10;       from planet_osm_polygon&#10;       where (building is not null&#10;         and building not in (&apos;no&apos;,&apos;station&apos;,&apos;supermarket&apos;,&apos;planned&apos;)&#10;         and (railway is null or railway != &apos;station&apos;)&#10;         and (amenity is null or amenity != &apos;place_of_worship&apos;))&#10;          or aeroway = &apos;terminal&apos;&#10;       order by z_order,way_area desc) as buildings</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="tracks-notunnel-nobridge" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>tracks-notunnel-nobridge</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,tracktype from planet_osm_line where highway=&apos;track&apos; and (bridge is null or bridge in (&apos;no&apos;,&apos;false&apos;,&apos;0&apos;)) and (tunnel is null or tunnel in (&apos;no&apos;,&apos;false&apos;,&apos;0&apos;))) as tracks</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="minor-roads-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>minor-roads-fill-links</StyleName>
    <StyleName>minor-roads-fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,horse,bicycle,foot,construction,aeroway,&#10;       case when tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else tunnel end as tunnel,&#10;       case when bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;) then &apos;yes&apos;::text else bridge end as bridge,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;spur-siding-yard&apos;::text else railway end as railway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text else service end as service&#10;       from planet_osm_line&#10;       where highway is not null&#10;          or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;          or railway in (&apos;light_rail&apos;,&apos;narrow_gauge&apos;,&apos;funicular&apos;,&apos;rail&apos;,&apos;subway&apos;,&apos;tram&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;platform&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;,&apos;miniature&apos;,&apos;turntable&apos;)&#10;       order by z_order) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="turning_circle-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>turning_circle-fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select distinct on (p.way) p.way as way,l.highway as int_tc_type&#10;       from planet_osm_point p&#10;       join planet_osm_line l&#10;        on ST_DWithin(p.way,l.way,0.1)&#10;       join (values&#10;        (&apos;tertiary&apos;,1),&#10;        (&apos;unclassified&apos;,2),&#10;        (&apos;residential&apos;,3),&#10;        (&apos;living_street&apos;,4),&#10;        (&apos;service&apos;,5)&#10;       ) as v (highway,prio)&#10;        on v.highway=l.highway&#10;       where p.highway=&apos;turning_circle&apos;&#10;       order by p.way,v.prio&#10;      ) as turning_circle</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="ferry-routes" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>ferry-routes</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where route=&apos;ferry&apos; ) as routes</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="aerialways" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>aerialways</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,aerialway from planet_osm_line where aerialway is not null) as aerialways</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="roads" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,&#10;       case when tunnel in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else tunnel end as tunnel,&#10;       case when railway=&apos;preserved&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;) then &apos;INT-preserved-ssy&apos;::text else railway end as railway&#10;       from planet_osm_roads&#10;       where highway is not null&#10;          or (railway is not null and railway!=&apos;preserved&apos; and (service is null or service not in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;)))&#10;          or railway=&apos;preserved&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="waterway-bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>waterway-bridges</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name&#10;       from planet_osm_line&#10;       where waterway=&apos;canal&apos;&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;aqueduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;       order by z_order&#10;      ) as water</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="access-pre_bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and (bridge is null or bridge not in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;))&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="direction_pre_bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and (bridge is null or bridge not in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;))&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and (layer is null or layer = &apos;0&apos;)&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and (layer is null or layer in (&apos;-5&apos;,&apos;-4&apos;,&apos;-3&apos;,&apos;-2&apos;,&apos;-1&apos;,&apos;0&apos;))&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and (layer is null or layer in (&apos;-5&apos;,&apos;-4&apos;,&apos;-3&apos;,&apos;-2&apos;,&apos;-1&apos;,&apos;0&apos;))&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;1&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;1&apos;&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;1&apos;&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;2&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;2&apos;&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;2&apos;&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;3&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;3&apos;&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;3&apos;&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;4&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;4&apos;&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;4&apos;&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_layer5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>bridges_casing</StyleName>
    <StyleName>bridges_casing2</StyleName>
    <StyleName>bridges_fill</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,horse,bicycle,foot,tracktype,&#10;       case when railway in (&apos;spur&apos;,&apos;siding&apos;)&#10;              or (railway=&apos;rail&apos; and service in (&apos;spur&apos;,&apos;siding&apos;,&apos;yard&apos;))&#10;            then &apos;INT-spur-siding-yard&apos;::text else railway end as railway&#10;       from planet_osm_line&#10;       where (highway is not null&#10;              or aeroway in (&apos;runway&apos;,&apos;taxiway&apos;)&#10;              or railway in (&apos;light_rail&apos;,&apos;subway&apos;,&apos;narrow_gauge&apos;,&apos;rail&apos;,&apos;spur&apos;,&apos;siding&apos;,&apos;disused&apos;,&apos;abandoned&apos;,&apos;construction&apos;))&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;5&apos;&#10;       order by z_order&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_access5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>access</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,access,highway,&#10;       case when service in (&apos;parking_aisle&apos;,&apos;drive-through&apos;,&apos;driveway&apos;) then &apos;INT-minor&apos;::text end as service&#10;       from planet_osm_line&#10;       where access is not null and highway is not null&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;5&apos;&#10;      ) as access</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="bridges_directions5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&#10;       case when oneway in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;) then &apos;yes&apos;::text else oneway end as oneway&#10;       from planet_osm_line&#10;       where oneway is not null&#10;         and (highway is not null or railway is not null or waterway is not null)&#10;         and bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;)&#10;         and layer = &apos;5&apos;&#10;      ) as directions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="trams" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>trams</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,railway,bridge from planet_osm_line where railway=&apos;tram&apos; and (tunnel is null or tunnel not in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;))) as trams</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="guideways" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>guideways</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where highway=&apos;bus_guideway&apos; and (tunnel is null or tunnel not in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;))) as guideways</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="admin-01234" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>admin-01234</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,admin_level&#10;       from planet_osm_roads&#10;       where &quot;boundary&quot;=&apos;administrative&apos;&#10;         and admin_level in (&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;)&#10;       ) as admin</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="admin-5678" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>admin-5678</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,admin_level&#10;       from planet_osm_roads&#10;       where &quot;boundary&quot;=&apos;administrative&apos;&#10;         and admin_level in (&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;)&#10;       ) as admin</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="admin-other" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>admin-other</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,admin_level&#10;       from planet_osm_roads&#10;       where &quot;boundary&quot;=&apos;administrative&apos;&#10;         and (admin_level is null or admin_level not in (&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;))&#10;       ) as admin</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="placenames-large" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>country</StyleName>
    <StyleName>state</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,place,name,ref&#10;       from planet_osm_point&#10;       where place in (&apos;country&apos;,&apos;state&apos;)&#10;      ) as placenames</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="placenames-capital" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>capital</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,place,name,ref&#10;       from planet_osm_point&#10;       where place in (&apos;city&apos;,&apos;metropolis&apos;,&apos;town&apos;) and capital=&apos;yes&apos;&#10;      ) as placenames</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="placenames-medium" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>city</StyleName>
    <StyleName>town</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,place,name&#10;      from planet_osm_point&#10;      where place in (&apos;city&apos;,&apos;metropolis&apos;,&apos;town&apos;,&apos;large_town&apos;,&apos;small_town&apos;)&#10;        and (capital is null or capital != &apos;yes&apos;)&#10;      ) as placenames</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="placenames-small" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>suburb</StyleName>
    <StyleName>village</StyleName>
    <StyleName>hamlet</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,place,name&#10;      from planet_osm_point&#10;      where place in (&apos;suburb&apos;,&apos;village&apos;,&apos;large_village&apos;,&apos;hamlet&apos;,&apos;locality&apos;,&apos;isolated_dwelling&apos;,&apos;farm&apos;)&#10;      ) as placenames</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-stations" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>stations</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name,railway,aerialway,disused&#10;      from planet_osm_point&#10;      where railway in (&apos;station&apos;,&apos;halt&apos;,&apos;tram_stop&apos;,&apos;subway_entrance&apos;)&#10;         or aerialway=&apos;station&apos;&#10;      ) as stations</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-stations-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>stations</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name,railway,aerialway,disused&#10;      from planet_osm_polygon&#10;      where railway in (&apos;station&apos;,&apos;halt&apos;,&apos;tram_stop&apos;)&#10;         or aerialway=&apos;station&apos;&#10;      ) as stations</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-symbols" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>symbols</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select *&#10;      from planet_osm_point&#10;      where aeroway in (&apos;airport&apos;,&apos;aerodrome&apos;,&apos;helipad&apos;)&#10;         or barrier in (&apos;bollard&apos;,&apos;gate&apos;,&apos;lift_gate&apos;,&apos;block&apos;)&#10;         or highway in (&apos;mini_roundabout&apos;,&apos;gate&apos;)&#10;         or man_made in (&apos;lighthouse&apos;,&apos;power_wind&apos;,&apos;windmill&apos;,&apos;mast&apos;)&#10;         or (power=&apos;generator&apos; and (&quot;generator:source&quot;=&apos;wind&apos; or power_source=&apos;wind&apos;))&#10;         or &quot;natural&quot; in (&apos;peak&apos;,&apos;volcano&apos;,&apos;spring&apos;,&apos;tree&apos;,&apos;cave_entrance&apos;)&#10;         or railway=&apos;level_crossing&apos;&#10;      ) as symbols</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-symbols-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>symbols</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select *&#10;      from planet_osm_polygon&#10;      where aeroway in (&apos;airport&apos;,&apos;aerodrome&apos;,&apos;helipad&apos;)&#10;         or barrier in (&apos;bollard&apos;,&apos;gate&apos;,&apos;lift_gate&apos;,&apos;block&apos;)&#10;         or highway in (&apos;mini_roundabout&apos;,&apos;gate&apos;)&#10;         or man_made in (&apos;lighthouse&apos;,&apos;power_wind&apos;,&apos;windmill&apos;,&apos;mast&apos;)&#10;         or (power=&apos;generator&apos; and (&quot;generator:source&quot;=&apos;wind&apos; or power_source=&apos;wind&apos;))&#10;         or &quot;natural&quot; in (&apos;peak&apos;,&apos;volcano&apos;,&apos;spring&apos;,&apos;tree&apos;)&#10;         or railway=&apos;level_crossing&apos;&#10;      ) as symbols</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-points" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>points</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,amenity,shop,tourism,highway,man_made,access,religion,waterway,lock,historic,leisure&#10;      from planet_osm_point&#10;      where amenity is not null&#10;         or shop is not null&#10;         or tourism in (&apos;alpine_hut&apos;,&apos;camp_site&apos;,&apos;caravan_site&apos;,&apos;guest_house&apos;,&apos;hostel&apos;,&apos;hotel&apos;,&apos;motel&apos;,&apos;museum&apos;,&apos;viewpoint&apos;,&apos;bed_and_breakfast&apos;,&apos;information&apos;,&apos;chalet&apos;)&#10;         or highway in (&apos;bus_stop&apos;,&apos;traffic_signals&apos;,&apos;ford&apos;)&#10;         or man_made in (&apos;mast&apos;,&apos;water_tower&apos;)&#10;         or historic in (&apos;memorial&apos;,&apos;archaeological_site&apos;)&#10;         or waterway=&apos;lock&apos;&#10;         or lock=&apos;yes&apos;&#10;         or leisure in (&apos;playground&apos;,&apos;slipway&apos;)&#10;      ) as points</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="amenity-points-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>points</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,amenity,shop,tourism,highway,man_made,access,religion,waterway,lock,historic,leisure&#10;      from planet_osm_polygon&#10;      where amenity is not null&#10;         or shop is not null&#10;         or tourism in (&apos;alpine_hut&apos;,&apos;camp_site&apos;,&apos;caravan_site&apos;,&apos;guest_house&apos;,&apos;hostel&apos;,&apos;hotel&apos;,&apos;motel&apos;,&apos;museum&apos;,&apos;viewpoint&apos;,&apos;bed_and_breakfast&apos;,&apos;information&apos;,&apos;chalet&apos;)&#10;         or highway in (&apos;bus_stop&apos;,&apos;traffic_signals&apos;)&#10;         or man_made in (&apos;mast&apos;,&apos;water_tower&apos;)&#10;         or historic in (&apos;memorial&apos;,&apos;archaeological_site&apos;)&#10;         or leisure=&apos;playground&apos;&#10;      ) as points</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="power_line" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>power_line</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where &quot;power&quot;=&apos;line&apos;) as power_line</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="power_minorline" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>power_minorline</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where &quot;power&quot;=&apos;minor_line&apos;) as power_minorline</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="power_towers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>power_towers</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_point where power=&apos;tower&apos;) as power_towers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="power_poles" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>power_poles</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_point where power=&apos;pole&apos;) as power_poles</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="roads-text-ref-low-zoom" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads-text-ref-low-zoom</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,ref,char_length(ref) as length&#10;       from planet_osm_roads&#10;       where highway in (&apos;motorway&apos;,&apos;trunk&apos;,&apos;primary&apos;,&apos;secondary&apos;)&#10;         and ref is not null&#10;         and char_length(ref) between 1 and 8&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="highway-junctions" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>highway-junctions</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,ref,name&#10;      from planet_osm_point&#10;      where highway=&apos;motorway_junction&apos;&#10;     ) as junctions</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="roads-text-ref" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads-text-ref</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,aeroway,ref,char_length(ref) as length,&#10;       case when bridge in (&apos;yes&apos;,&apos;true&apos;,&apos;1&apos;,&apos;viaduct&apos;,&apos;swing&apos;,&apos;lift&apos;) then &apos;yes&apos;::text else bridge end as bridge&#10;       from planet_osm_line&#10;       where (highway is not null or aeroway is not null)&#10;         and ref is not null&#10;         and char_length(ref) between 1 and 8&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="roads-text-name" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads-text-name</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,highway,name&#10;       from planet_osm_line&#10;       where waterway IS NULL&#10;         and leisure IS NULL&#10;         and landuse IS NULL&#10;         and name is not null&#10;      ) as roads</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>text</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,amenity,shop,access,leisure,landuse,man_made,&quot;natural&quot;,place,tourism,ele,name,ref,military,aeroway,waterway,historic,&apos;yes&apos;::text as point&#10;       from planet_osm_point&#10;       where amenity is not null&#10;          or shop in (&apos;supermarket&apos;,&apos;bakery&apos;,&apos;clothes&apos;,&apos;fashion&apos;,&apos;convenience&apos;,&apos;doityourself&apos;,&apos;hairdresser&apos;,&apos;department_store&apos;,&apos;butcher&apos;,&apos;car&apos;,&apos;car_repair&apos;,&apos;bicycle&apos;,&apos;florist&apos;)&#10;          or leisure is not null&#10;          or landuse is not null&#10;          or tourism is not null&#10;          or &quot;natural&quot; is not null&#10;          or man_made in (&apos;lighthouse&apos;,&apos;windmill&apos;)&#10;          or place=&apos;island&apos;&#10;          or military=&apos;danger_area&apos;&#10;          or aeroway=&apos;gate&apos;&#10;          or waterway=&apos;lock&apos;&#10;          or historic in (&apos;memorial&apos;,&apos;archaeological_site&apos;)&#10;      ) as text</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="text-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>text</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,aeroway,shop,access,amenity,leisure,landuse,man_made,&quot;natural&quot;,place,tourism,NULL as ele,name,ref,military,waterway,historic,&apos;no&apos;::text as point&#10;       from planet_osm_polygon&#10;       where amenity is not null&#10;          or shop in (&apos;supermarket&apos;,&apos;bakery&apos;,&apos;clothes&apos;,&apos;fashion&apos;,&apos;convenience&apos;,&apos;doityourself&apos;,&apos;hairdresser&apos;,&apos;department_store&apos;, &apos;butcher&apos;,&apos;car&apos;,&apos;car_repair&apos;,&apos;bicycle&apos;)&#10;          or leisure is not null&#10;          or landuse is not null&#10;          or tourism is not null&#10;          or &quot;natural&quot; is not null&#10;          or man_made in (&apos;lighthouse&apos;,&apos;windmill&apos;)&#10;          or place=&apos;island&apos;&#10;          or military=&apos;danger_area&apos;&#10;          or historic in (&apos;memorial&apos;,&apos;archaeological_site&apos;)&#10;      ) as text</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="area-text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>area-text</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,way_area,name&#10;       from planet_osm_polygon&#10;       where name is not null&#10;         and (waterway is null or waterway != &apos;riverbank&apos;)&#10;         and place is null&#10;       order by way_area desc&#10;      ) as text</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="interpolation_lines" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>interpolation</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way from planet_osm_line where &quot;addr:interpolation&quot; is not null) as interpolation</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="housenumbers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>housenumbers</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&quot;addr:housenumber&quot; from planet_osm_polygon where &quot;addr:housenumber&quot; is not null and building is not null&#10;       union&#10;       select way,&quot;addr:housenumber&quot; from planet_osm_point where &quot;addr:housenumber&quot; is not null&#10;      ) as housenumbers</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="housenames" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>housenames</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,&quot;addr:housename&quot; from planet_osm_polygon where &quot;addr:housename&quot; is not null and building is not null&#10;       union&#10;       select way,&quot;addr:housename&quot; from planet_osm_point where &quot;addr:housename&quot; is not null&#10;      ) as housenames</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="misc_boundaries" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>boundary</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,way_area,name,boundary from planet_osm_polygon where boundary=&apos;national_park&apos; and building is null) as boundary</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
  <Layer name="theme_park" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>theme_park</StyleName>
    <Datasource>
      <Parameter name="dbname">osm</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="host">postgis</Parameter>
      <Parameter name="password">Amigo:)</Parameter>
      <Parameter name="port"/>
      <Parameter name="table">(select way,name,tourism from planet_osm_polygon where tourism=&apos;theme_park&apos;) as theme_park</Parameter>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="user">amigoosm</Parameter>
    </Datasource>
  </Layer>
</Map>